驱动模块的组成
	1. 头文件（必须）
		#include <linux/init.h>
		#include <linux/module.h>
	
		module.h 文件包含了加载模块时需要使用的大量符号和函数定义。
		init.h 包含了模块加载函数和模块释放函数的宏定义。

	2.模块参数（可选）
		module_param()
	
	3.模块加载函数（必须）
		module_init();
		//使用insmod命令加载模块时，会调用该函数
		//modprobe命令加载模块，会模块依赖的模块或库一同加载
	
	4.模块卸载函数（必须）
		module_exit();//使用rmmod命令卸载模块时，会调用该函数
	
	5.模块许可声明（必须）
		MODULE_LICENCE("GPL");//任一版本的GUN公共许可权 
		MODULE_LICENCE("GPL v2");//CPL版本2许可权
		MODULE_LICENCE("GPL and additional rights");//GPL及其附加许可权
		MODULE_LICENCE("Dual BSD/GPL");//BSD/GPL双重许可权
		MODULE_LICENCE("Dual MPL/GPL");//MPL/GPL双重许可权
		MODULE_LICENCE("Proprietary");//专用许可权

驱动的一些常见操作
	1. 查看模块是否加载
		lsmod 命令列出已加载的模块
		modinfo 命令用于查询模块的相关信息

	2. 模块加载后文件系统的变化(tiny4412-hello.ko)
		/proc/modules 、/sys/module 会发生变化
		/proc/modules：
		cat /proc/module | grep tiny4412* 返回如下信息：
		tiny4412-hello    1064                   0                     -     Live       0xd4c85000
		模块名            使用的内存       引用计数（模块被多少个程序使用） 分隔符 活跃状态                         加载到内存中的地址

		/sys/module/ 目录下会添加tiny4412-hello这个模块的基本信息

驱动静态编译到内核中
	1. 编译的驱动存放到内核源码kernel/drivers/目录下
	2. 创建xxxx目录，再在目录里面创建xxx.c文件还有Makefile
	3. 将xxxx目录中Makefile加到上层目录中的Makefile
		obj-y	+= xxxx/
	4. 目录下都会有一个built-in.o，源码目录下有会有xx.c文件，一个还有多个.c文件编译后都会在当前目录下生成built-in.o，将所有built-in.o链接，最后生成镜像
	5. 有时也会使用图形化界面配置驱动到内核就要编写Kconfig，语法参考Documentation/kbuild/kconfig-language.txt
	